package com.park.lite_patch;

import android.content.Context;
import android.util.Base64;
import android.util.Log;

import java.io.File;
import java.io.FileOutputStream;
import java.lang.reflect.Method;

public class Fixer {

    private static final String TAG = "LitePatch";

    private static native long getArtMethodSize(Method pre, Method next);

    private static native boolean testInBuiltArtMethod(Method a);

    private static native void replace(Method src, Method dest);

    private static volatile boolean fixerAvailable = false;

    public static boolean isFixerAvailable() {
        return fixerAvailable;
    }

    public static void setup(Context context) {
        try {
            File soFile = writeSoFile(context);
            if (soFile == null) {
                Log.e(TAG, "can not write so file.");
                return;
            }
            System.load(soFile.getAbsolutePath());
            Method pre = MethodStub.class.getDeclaredMethod("func1");
            Method next = MethodStub.class.getDeclaredMethod("func2");
            Log.d(TAG, "art method size=" + getArtMethodSize(pre, next));
            testInBuiltArtMethod(pre);
            fixerAvailable = true;
            Log.i(TAG, "[+] fixer is ready!");
        } catch (Throwable tr) {
            Log.e(TAG, "[-] getArtMethodSize fail", tr);
        }
    }

    public static void fix(Method needFixMethod, Method fixedMethod) {
        if (!fixerAvailable) {
            Log.w(TAG, "[-] not available");
            return;
        }
        replace(needFixMethod, fixedMethod);
    }

    /**
     * @param context
     * @return so file path
     */
    private static File writeSoFile(Context context) {
        byte[] bytes = Base64.decode(nativeCodes, Base64.NO_WRAP);
        File soFileDir = new File(context.getDataDir(), "lib/arm64");
        soFileDir.mkdirs();
        File soFile = new File(soFileDir, "liblite_patch.so");
        if (soFile.exists()) {
            soFile.delete();
        }
        try {
            FileOutputStream fos = new FileOutputStream(soFile);
            fos.write(bytes);
            fos.flush();
            fos.close();
            soFile.setReadOnly();
            return soFile;
        } catch (Throwable tr) {
            Log.e(TAG, "writeSoFile fail.", tr);
        }
        return null;
    }

    public static class MethodStub {
        public void func1() {
        }

        public void func2() {
        }
    }

    private static final String nativeCodes = "";

}
